package br.com.ztech.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

@Entity
public class Transacao {
	
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long id;
	
	@Column(nullable=false)
	private LocalDateTime data;
	
	@Column(nullable=false)
	private BigDecimal valor;
	
	@ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "conta_id", nullable = false) 
	private Conta conta;
	
	@ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "tipotransacao_id", nullable = false) 
	private TipoTransacao tipoTransacao;
	
	@ManyToOne(fetch = FetchType.LAZY, optional = false)
    @JoinColumn(name = "contadestino_id", nullable = true) 
	private Conta contaDestino;
	
	public Transacao() {}

	public Transacao(Long id, LocalDateTime data, BigDecimal valor, Conta conta, TipoTransacao tipoTransacao) {
		this.id = id;
		this.data = data;
		this.valor = valor;
		this.conta = conta;
		this.tipoTransacao = tipoTransacao;
	}
	
	public Transacao(LocalDateTime data, BigDecimal valor, Conta conta, TipoTransacao tipoTransacao) {
		this.data = data;
		this.valor = valor;
		this.conta = conta;
		this.tipoTransacao = tipoTransacao;
	}
	
	public Transacao(LocalDateTime data, BigDecimal valor, Conta conta, Conta contaDestino, TipoTransacao tipoTransacao) {
		this.data = data;
		this.valor = valor;
		this.conta = conta;
		this.contaDestino = contaDestino;
		this.tipoTransacao = tipoTransacao;
	}
	
	public Conta getConta() {
		return conta;
	}

	public void setConta(Conta conta) {
		this.conta = conta;
	}

	public TipoTransacao getTipoTransacao() {
		return tipoTransacao;
	}

	public void setTipoTransacao(TipoTransacao tipoTransacao) {
		this.tipoTransacao = tipoTransacao;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public LocalDateTime getData() {
		return data;
	}

	public void setData(LocalDateTime data) {
		this.data = data;
	}

	public BigDecimal getValor() {
		return valor;
	}

	public void setValor(BigDecimal valor) {
		this.valor = valor;
	}

	public Conta getContaDestino() {
		return contaDestino;
	}

	public void setContaDestino(Conta contaDestino) {
		this.contaDestino = contaDestino;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Transacao other = (Transacao) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "Transacao [id=" + id + ", data=" + data + ", valor=" + valor + ", conta=" + conta + ", tipoTransacao="
				+ tipoTransacao + ", contaDestino=" + contaDestino + "]";
	}
}